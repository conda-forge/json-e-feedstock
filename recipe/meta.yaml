{% set version = "4.6.0" %}

package:
  name: json-e
  version: {{ version }}

source:
  - folder: dist
    url: https://pypi.io/packages/source/j/json-e/json-e-{{ version }}.tar.gz
    sha256: 2ec3796a6fb40097642a0cc17ba1a0c08b637a76d32f27633fa4cd9def1e77f8
  - folder: src
    url: https://github.com/json-e/json-e/archive/refs/tags/v{{ version }}.tar.gz
    sha256: 09d5008164990b93173698c636f8a1d2975f64e74596336a6cfda6e4b10c4d42

build:
  noarch: python
  number: 0
  script: cd dist && {{ PYTHON }} -m pip install . --no-deps

requirements:
  host:
    - python >=3.6
    - pip
  run:
    - python >=3.6

test:
  source_files:
    - src/py/test
    - src/specification.yml
  requires:
    - freezegun
    - hypothesis
    - nose
    - pyyaml
    - python-dateutil
    - pep8
    - pip
  imports:
    - jsone
  commands:
    - python -m pip check
    - cd src/py/test && nosetests

about:
  home: https://json-e.js.org
  license: MPL-2.0
  license_family: MOZILLA
  license_file: src/LICENSE
  summary: A data-structure parameterization system written for embedding context in JSON objects
  dev_url: https://github.com/json-e/json-e
  description: >
    The central idea is to treat a data structure as a "template" and transform it, using another data structure as context, to produce an output data structure.

    There are countless libraries to do this with strings, such as mustache. What makes JSON-e unique is that it operates on data structures, not on their textual representation. This allows input to be written in a number of formats (JSON, YAML, etc.) or even generated dynamically. It also means that the output cannot be
    "invalid", even when including large chunks of contextual data.

    JSON-e is also designed to be safe for use on untrusted data. It never uses eval or any other function that might result in arbitrary code execution. It also disallows unbounded iteration, so any JSON-e rendering operation will finish in finite time.

extra:
  recipe-maintainers:
    - bollwyvl
